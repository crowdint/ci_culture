%h1
  CORE VALUES

%h2
  Mision
%p
  Create solutions for our costumers and be a major contributor to the Open Source community
  
%h2
  Vision
%p
  To be a Lead Team of experts on ruby-based technologies, recognized worldwide for it’s creativity, agility, service excellence and Open Source Contributions.

%h2
  Core Values
%ul
  %li
    %strong
      Merit:
    We are a company that values what you achieve, not what you wear or who you know. 
  %li
    %strong
      Ownership:
    We love it when people take the lead on their tasks and objectives, and aren't satisfied until they are completed. 
  %li
    %strong
      Agility:
    The only constant is change.  We have to evolve continuously to get ahead of the competition.
  %li
    %strong
      Learning:
    The only way to deal with constant change effectively is to make learning a core competency -- and to be better at it than the competition.
  %li
    %strong
      Excellence:
    We hire the best and create an environment of growth so that we can be the best -- not the middle of the pack.
  %li
    %strong
      Happiness:
    No one wants to work at a place that isn't fun.  Creating experiences that foster and build happiness is a core part of making this place great.
  %li
    %strong
      Collaboration:
    It takes true cooperation and sharing among the bright minds here in order to make really great things happen.
  %li
    %strong
      Open Source:
    Contribute to open source is essential to help the community to keep growing and returning the acquired knowledge
    
%h2
  Methodology
%h3
  Scrum
%h4
  Process
%ul
  %li
    %strong
      Daily standup:
    %ul
      %li
        The meeting starts precisely on time.
      %li
        The meeting should happen at the same location and same time every day.
      %li
        The meeting is timeboxed to 15 minutes.
      %li
        During the meeting, each team member answers three questions:
        %ol
          %li
            What have you done since yesterday?
          %li
            What are you planning to do today?
          %li
            Do you have any problems preventing you from accomplishing your goal?
            
  %li
    %strong
      Sprint planning meeting:
    %ul
      %li
        At the beginning of the sprint cycle (every 7–30 days), a “Sprint Planning Meeting” is held.
      %li
        Select what work is to be done.
      %li
        Prepare the Sprint Backlog that details the time it will take to do that work.
      %li
        Identify and communicate how much of the work is likely to be done during the current sprint.

        
  %li
    %strong
      Sprint Review Meeting:
    %ul
      %li
        Review the work that was completed and not completed.
      %li
        Present the completed work to the stakeholders.
      %li
        Incomplete work cannot be demonstrated.
      %li
        Two hour time limit.
  %li
    %strong
      Sprint retrospective
    %ul
      %li
        All team members reflect on the past sprint.
      %li
        Make continuous process improvements
      %li
        Two main questions are asked in the sprint retrospective: 
        %ol
          %li
            What went well during the sprint? 
          %li
            What could be improved in the next sprint?
      %li
        Three hour time limit

%h4
  Documents
%ul
  %li
    %strong
      Product backlog:
    Is a high-level list that is maintained throughout the entire project. It aggregates backlog items: broad descriptions of all potential features, prioritized as an absolute ordering by business value. It is therefore the “What” that will be build, sorted by importance. It is open and editable by anyone in the project and contains rough estimates of both business value and development effort.
  %li
    %strong
      Sprint backlog:
    Is the list of work the team must address during the next sprint. Features are broken down into tasks, which, as a best practice, should normally be between four and sixteen hours of work. With this level of detail the whole team understands exactly what to do, and potentially, anyone can pick a task from the list.
  %li
    %strong
      Burn down:
    Is a publicly displayed chart showing remaining work in the sprint backlog. Updated every day, it gives a simple view of the sprint progress. It also provides quick visualizations for reference.

%h4
  Issue/task tracking system
%ul
  %li
    Pivotaltracker

%h4  
  Pair Programming
%ul
  %li
    %strong
      Skype:
    Shared skype accounts
  %li
    %strong
      Pair stations:
    Two keyboards and mouses (No personal computers)
  %li
    %strong
      PingPong style: 
    One developer writes tests and the other one makes them pass, and next time, they switch.  Development always begins with the test.
  %li
    %strong
      Breaks:
    Short 2 to 5 minute breaks are allowed.  Enough time to get a coffee refill.
  